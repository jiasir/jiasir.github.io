<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2017 on jiasir</title><link>https://jiasir.io/categories/2017/</link><description>Recent content in 2017 on jiasir</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 20 Mar 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://jiasir.io/categories/2017/index.xml" rel="self" type="application/rss+xml"/><item><title>Replace Strings With Sed in Directory and Sub Directories</title><link>https://jiasir.io/posts/2017/replace-strings-with-sed-in-directory-and-sub-directories/</link><pubDate>Mon, 20 Mar 2017 00:00:00 +0000</pubDate><guid>https://jiasir.io/posts/2017/replace-strings-with-sed-in-directory-and-sub-directories/</guid><description>The first line occurrences of &amp;ldquo;foo&amp;rdquo; will be replaced with &amp;ldquo;bar&amp;rdquo;. And you can using the second line to check.
grep -rl &amp;#39;foo&amp;#39; . | xargs sed -i &amp;#39;s/foo/bar/g&amp;#39; grep &amp;#39;foo&amp;#39; -r * | awk -F: {&amp;#39;print $1&amp;#39;} | sort -n | uniq -c</description></item><item><title>How Python Decorator Works</title><link>https://jiasir.io/posts/2017/how-python-decorator-works/</link><pubDate>Thu, 16 Mar 2017 00:00:00 +0000</pubDate><guid>https://jiasir.io/posts/2017/how-python-decorator-works/</guid><description>Decorators provide a simple syntax for calling higher-order functions. A decorator is a function that takes another function and extends the behavior of the latter function without explicitly modifying it.
How function works Functions return a value based on the given arguments.
def foo(bar): return bar + 1 print(foo(2)) # will print 3 What is first class object All objects that could be named in the language (e.</description></item><item><title>Git Merge With a Merge Commit</title><link>https://jiasir.io/posts/2017/git-merge-with-a-merge-commit/</link><pubDate>Thu, 02 Mar 2017 00:00:00 +0000</pubDate><guid>https://jiasir.io/posts/2017/git-merge-with-a-merge-commit/</guid><description>Git does a fast forward when you merge branch that is ahead of your checked-out branch, git only update the branch pointer. Some people don&amp;rsquo;t like that and want to see a explicit merge.
git checkout develop git merge --no-ff myfeature git push origin develop The --no-ff flag causes the merge to always create a new commit object, even if the merge could be performed with a fast-forward. This avoids losing information about the historical existence of a feature branch and groups together all commits that together added the feature.</description></item><item><title>Rename Git Branch Locally and Remotely</title><link>https://jiasir.io/posts/2017/rename-git-branch-locally-and-remotely/</link><pubDate>Wed, 01 Mar 2017 00:00:00 +0000</pubDate><guid>https://jiasir.io/posts/2017/rename-git-branch-locally-and-remotely/</guid><description>There are three steps to rename git branch locally and remotely.
git branch -m old_branch new_branch # Rename branch locally git push origin :old_branch # Delete the old branch remotely git push --set-upstream origin new_branch # Push the new branch, set local branch to track the new remote And this is also works to rename the currently checked out branch.
git branch -m new_branch If you want to delete branch locally and remotely.</description></item><item><title>Why I Decided to Develop Playback</title><link>https://jiasir.io/posts/2017/why-i-decided-to-develop-playback/</link><pubDate>Tue, 28 Feb 2017 00:00:00 +0000</pubDate><guid>https://jiasir.io/posts/2017/why-i-decided-to-develop-playback/</guid><description>Since March 2015 I decided to develop a new automated deployment tool for OpenStack called the Playback. Because I tried almost all popular tools and We need a low learning cost, flexible, production-oriented high-availability level automated build tool. Below is a simple comparison of some open source solutions:
Juju solutions for OpenStack OpenStack Autopilot puppetlabs-openstack openstack-ansible Kolla RDO(Packstack) TripleO Juju solutions for OpenStack Juju is a good tool for provisioning and orchestration, but bad to deploy OpenStack.</description></item><item><title>Multiple Provider Network Configuration in Mitaka</title><link>https://jiasir.io/posts/2017/multiple-provider-network-configuration-in-mitaka/</link><pubDate>Thu, 23 Feb 2017 00:00:00 +0000</pubDate><guid>https://jiasir.io/posts/2017/multiple-provider-network-configuration-in-mitaka/</guid><description>Neutron provider VLANs are Neutron networks that map directly to an 802.1Q VLAN in the cloud provider&amp;rsquo;s physical network infrastructure.
This is the example configuration of neutron network node:
On the neutron.conf file:
[DEFAULT] core_plugin = ml2 service_plugins = router On the ml2_conf.ini file:
[ml2] type_drivers = flat,vlan,vxlan tenant_network_types = vxlan mechanism_drivers = linuxbridge,l2population extension_drivers = port_security [ml2_type_flat] flat_networks = provider [ml2_type_vlan] network_vlan_ranges = provider [securitygroup] firewall_driver = iptables We also need to configure the physical switches as trunk not access mode:</description></item></channel></rss>