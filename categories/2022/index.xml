<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2022 on jiasir</title><link>https://jiasir.io/categories/2022/</link><description>Recent content in 2022 on jiasir</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 19 Apr 2022 16:39:48 +0800</lastBuildDate><atom:link href="https://jiasir.io/categories/2022/index.xml" rel="self" type="application/rss+xml"/><item><title>Availability Chart</title><link>https://jiasir.io/posts/2022/availability-chart/</link><pubDate>Tue, 19 Apr 2022 16:39:48 +0800</pubDate><guid>https://jiasir.io/posts/2022/availability-chart/</guid><description>Here is a table of availability levels for reference Level Per Year Per Quarter Per 30 Days 95% 18d 9d 3d 99% 3d 21h 7h 99.9% 8h 2h 43m 99.95% 4h 1h 21m 99.99% 52m 12m 4m 99.999% 5m 1m 25s</description></item><item><title>Git Cheat Sheet</title><link>https://jiasir.io/posts/2022/git-cheat-sheet/</link><pubDate>Sun, 17 Apr 2022 17:38:22 +0800</pubDate><guid>https://jiasir.io/posts/2022/git-cheat-sheet/</guid><description>Commits的关联关系 Git用username关联commits GitHub用电子邮件关联commits 全局设置 git config --global user.name &amp;#34;user-name&amp;#34; # 设置username git config --global user.email &amp;#34;email&amp;#34; # 设置email git config --global credential.helper osxkeychain # 设置密码通过osxkeychain保存 仓库级别设置 git config user.name &amp;#34;user-name&amp;#34; git config user.email &amp;#34;email&amp;#34; 列出全局设置 git config --global --list 设置upstream git branch -u origin/branch_name # 设定当前分支的upstream为origin/branch_name 删除remote branch git branch -d branch_name # delete local branch git push origin :branch_name # delete remote branch git push -d origin branch_name # delete remote branch Find branch tracking git remote show origin Push local new branch to remote git branch branch_name git checkout branch_name git push -u origin branch_name # 注意格式： git push [remote] [local_branch] [remote_branch]，如果remote_branch没有local_branch，则会被创建 设置credential helper git config --global credential.</description></item><item><title>What is the Difference Between DevOps and SRE</title><link>https://jiasir.io/posts/2022/what-is-the-difference-between-devops-and-sre/</link><pubDate>Sun, 17 Apr 2022 16:46:43 +0800</pubDate><guid>https://jiasir.io/posts/2022/what-is-the-difference-between-devops-and-sre/</guid><description>DevOps分解的5个关键领域 Reduce Organization Silos：减少组织沉默。打破团队之间的障碍，增加协作。 Accept failure as Normal：接受正常的失败。计算机本质上是不可靠的，所以我们不能期望完美。 Implement Gradual Change：实施渐进式变更。小的变更更容易审查，渐进式变更能减少平均恢复时间，使回滚更简单。 Leverage Tooling &amp;amp; Automation：利用工具和自动化。 Measure Everything：衡量一切。衡量是成功的标准，如果没发衡量，那么我们就无法知道前四个支柱是否成功。 DevOps VS SRE 如果DevOps被看作是一种哲学，那么SRE是实现该哲学的一种规范方式 如果DevOps是编程语言中的一个接口，那么SRE是一个实现DevOps的具体类 class SRE implements DevOps SRE的具体实现 Reduce Organization Silos Share ownership：与开发人员共享生产所有权，通过相同的工具确保每个人都有相同的观点和相同的方法来处理生产，降低对于生产的模糊。 Accept failure as Normal SLOs &amp;amp; Blameless PMs：我们有没有可指责的事后分析，确保相同问题不会再次发生。 Implement Gradual Change Reduce costs of failure：在完全发布到生产之前，做大量的灰度发布。 Leverage Tooling &amp;amp; Automation Automate this year’s job away：尽可能的消除手工工作，衡量我们最近一年有多少手工工作，将今年的工作自动化 Measure Everything Measure toil and reliability：衡量我们自己的工作量以及系统的可靠性和健康状况的衡量标准</description></item></channel></rss>